{
	// Place your Harold workspace snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	
	"Command Template": {
		"scope": "javascript",
		"prefix": "command",
		"body": [
			"const Discord = require('discord.js');",
			"const { SlashCommandBuilder } = require('@discordjs/builders');",
			"",
			"module.exports = {",
			"\tname: '$1', // command name",
			"\tdescription: '$2', // command description",
			"\targs: ${3:true}, // needs arguments?",
			"\tusage: '$4', // usage instructions w/o command name and prefix",
			"\tguildOnly: ${5:false}, // execute in a guild only?",
			"\tcooldown: ${6:3}, // cooldown in seconds, defaults to 3",
			"\tpermissions: [$7], // permissions required for command",
			"\tmyPermissions: [$8], // permissions required for bot",
			"\townerOnly: ${9:false}, // need to be the owner? delete line if no",
			"\tdisabled: ${10:false}, // command disabled to all? delete line if no",
			"\taliases: [$11],",
			"\tdata: new SlashCommandBuilder()",
			"\t\t.setName('$12')",
			"\t\t.setDescription('$13'),",
			"",
			"\texecute(interaction) { // inside here command stuff",
			"\t\t$0",	
			"\t},",
			"};"
		],
		"description": "Template for a new discord.js command"
	},
	"Event Template": {
		"scope": "javascript",
		"prefix": "event",
		"body": [
			"const Discord = require('discord.js');",
			"",
			"module.exports = {",
			"\tname: '$1',",
			"\tonce: ${2:true},",
			"\tasync execute() {",
			"\t\t$0",
			"\t},",
			"};"

		]
	},
	"Error Template": {
		"scope": "javascript",
		"prefix": "errorTemplate",
		"body": [
			"const returnError = { message: ${1:error.message}, stack: ${2:error.stack}, code: ${3:500}, report: ${4:false}, myMessage: '${5:Uh-oh, something went wrong!}' };",
			"throw returnError;"
		]
	}
}